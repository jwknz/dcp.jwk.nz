{"config":{"lang":["en"],"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Daily Coding Problems Everyday I get an email send to me with a coding problem. This site serves as my record of solving them. Each project (in the left column) describes the problem and links to my solution.","title":"Home"},{"location":"project-01/","text":"Problem 1 - Received on 03/04/2019 Problem asked by Google. Question Given a list of numbers and a number k, return whether any two numbers from the list add up to k. For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17. Bonus: Can you do this in one pass? Answer let n1 = [ 10 , 15 , 3 , 7 ] let k = 17 document . querySelector ( #app ). innerHTML = n1 . filter (( nm , i ) = n1 . map ( n2 = ( k === n2 + nm ) ? TRUE : null ). join ( ) ). length 0 View Answer on Github","title":"Problem 1 - Received on 03/04/2019"},{"location":"project-01/#problem_1_-_received_on_03042019","text":"","title":"Problem 1 - Received on 03/04/2019"},{"location":"project-01/#problem_asked_by_google","text":"Question Given a list of numbers and a number k, return whether any two numbers from the list add up to k. For example, given [10, 15, 3, 7] and k of 17, return true since 10 + 7 is 17. Bonus: Can you do this in one pass? Answer let n1 = [ 10 , 15 , 3 , 7 ] let k = 17 document . querySelector ( #app ). innerHTML = n1 . filter (( nm , i ) = n1 . map ( n2 = ( k === n2 + nm ) ? TRUE : null ). join ( ) ). length 0 View Answer on Github","title":"Problem asked by Google."},{"location":"project-02/","text":"This problem was asked by Uber. Given an array of integers, return a new array such that each element at index i of the new array is the product of all the numbers in the original array except the one at i. For example, if our input was [1, 2, 3, 4, 5], the expected output would be [120, 60, 40, 30, 24]. If our input was [3, 2, 1], the expected output would be [2, 3, 6]. Follow-up: what if you can't use division?","title":"Home"}]}